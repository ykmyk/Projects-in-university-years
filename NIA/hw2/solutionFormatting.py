# assume you’ve already done:
best_solution = [387, 367, 392, 307, 127, 187, 267, 326, 0, 53, 14, 113, 60, 18, 19, 24, 23, 82, 133, 121, 85, 0, 12, 72, 17, 77, 132, 120, 173, 74, 15, 16, 75, 134, 233, 293, 194, 0, 78, 6, 84, 83, 193, 142, 181, 241, 260, 0, 13, 1, 20, 80, 25, 26, 27, 7, 92, 151, 210, 261, 0, 59, 118, 119, 11, 76, 135, 136, 71, 179, 238, 239, 0, 180, 192, 137, 197, 252, 240, 353, 254, 195, 131, 0, 52, 5, 45, 105, 54, 55, 56, 51, 110, 169, 224, 184, 0, 36, 3, 29, 38, 89, 63, 96, 41, 156, 101, 42, 43, 0, 57, 112, 65, 125, 165, 114, 115, 10, 116, 176, 0, 22, 61, 73, 140, 200, 145, 86, 87, 146, 147, 67, 152, 0, 138, 79, 143, 202, 253, 262, 313, 301, 320, 265, 266, 207, 212, 272, 0, 66, 144, 203, 204, 263, 322, 373, 361, 380, 325, 0, 58, 117, 172, 177, 232, 185, 225, 175, 234, 285, 245, 352, 0, 50, 109, 164, 124, 106, 157, 64, 104, 49, 44, 37, 97, 46, 0, 420, 21, 2, 30, 81, 62, 88, 33, 28, 34, 94, 35, 40, 0, 4, 48, 107, 166, 217, 226, 277, 244, 284, 229, 271, 330, 0, 300, 312, 257, 198, 139, 126, 199, 258, 259, 0, 178, 237, 298, 299, 358, 417, 412, 357, 365, 405, 354, 295, 236, 0, 231, 290, 349, 404, 364, 397, 346, 287, 228, 129, 223, 0, 31, 32, 91, 150, 201, 182, 208, 153, 154, 95, 8, 0, 174, 70, 171, 230, 289, 344, 304, 286, 337, 227, 167, 0, 123, 216, 161, 183, 209, 158, 99, 100, 159, 218, 269, 0, 130, 391, 332, 247, 331, 390, 381, 362, 388, 0, 111, 170, 350, 409, 410, 351, 250, 356, 415, 414, 355, 296, 0, 205, 206, 321, 302, 328, 273, 214, 155, 68, 160, 219, 0, 90, 141, 122, 148, 93, 268, 213, 264, 323, 382, 383, 384, 0, 407, 348, 249, 343, 402, 401, 342, 283, 189, 288, 0, 242, 128, 220, 279, 188, 275, 334, 393, 0, 292, 345, 294, 235, 190, 291, 168, 163, 222, 281, 336, 303, 0, 196, 191, 256, 315, 374, 413, 360, 372, 317, 318, 377, 0, 47, 215, 280, 398, 339, 274, 333, 9, 103, 69, 108, 0, 297, 305, 375, 316, 251, 359, 418, 419, 311, 0, 255, 314, 310, 416, 370, 411, 394, 335, 248, 0, 102, 386, 327, 149, 98, 347, 406, 309, 403, 369, 408, 0, 39, 338, 389, 363, 329, 278, 243, 276, 221, 162, 0, 211, 270, 400, 368, 395, 308, 385, 379, 306, 0, 186, 246, 324, 319, 396, 341, 282, 376, 371, 0, 340, 399, 366, 378]

# split into routes at the depot marker (0)
routes = []
current = []
for node in best_solution:
    if node == 0:
        if current:
            routes.append([0] + current + [0])
            current = []
    else:
        current.append(node)
# if the last route didn’t end with 0, close it
if current:
    routes.append([0] + current + [0])

# pretty‑print
for i, route in enumerate(routes, 1):
    print(f"Route {i}:", " → ".join(map(str, route)))
